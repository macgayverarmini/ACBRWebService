name: Lazarus CI/CD

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [linux, windows]

    steps:
    - name: Checkout do código do projeto
      uses: actions/checkout@v4

    - name: Instalar dependências de sistema
      run: |
        sudo apt-get update
        sudo apt-get install -y subversion python3 python3-pip mingw-w64
        # A correção crucial para o windres, necessária para compilação cruzada
        sudo ln -s /usr/bin/x86_64-w64-mingw32-windres /usr/bin/windres

    - name: Configurar Lazarus e FPC (Cross-compile para Windows)
      uses: gcarreno/setup-lazarus@v3
      with:
        lazarus-version: '3.2.0' # Usando uma versão mais recente e estável
        with-cross-bits: '64'
        with-cross-os: 'win'
      if: matrix.target == 'windows'

    - name: Configurar Lazarus e FPC (Nativo para Linux)
      uses: gcarreno/setup-lazarus@v3
      with:
        lazarus-version: '3.2.0'
      if: matrix.target == 'linux'

    - name: Dar permissão de execução aos scripts
      run: chmod +x download.sh build.sh

    - name: Baixar dependências (ACBr, Horse, etc)
      run: ./download.sh

    - name: Instalar dependências Python
      run: pip3 install tqdm

    # A compilação dos pacotes e do projeto agora pode ser feita pelo build.sh
    # que já contém a lógica correta, garantindo consistência.
    - name: Construir o projeto (compilar pacotes e o executável)
      run: ./build.sh

    - name: Compilar o projeto para Windows 64-bit (se build.sh não fizer)
      if: matrix.target == 'windows'
      run: |
        # O build.sh já deve compilar, mas esta é uma garantia.
        # Se o build.sh já faz a compilação cruzada, este passo pode ser removido.
        lazbuild -B --os=win64 --cpu=x86_64 ACBRWebService.lpi

    - name: Upload do executável de Linux (Artefato)
      if: matrix.target == 'linux'
      uses: actions/upload-artifact@v4
      with:
        name: ACBRWebService-Linux
        path: ACBRWebService

    - name: Upload do executável de Windows (Artefato)
      if: matrix.target == 'windows'
      uses: actions/upload-artifact@v4
      with:
        name: ACBRWebService-Win64
        path: ACBRWebService.exe