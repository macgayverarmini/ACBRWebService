# .github/workflows/release.yml
name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ubuntu-22.04
    
    # Adicionando uma matriz de build para facilitar a adição de outras plataformas no futuro (ex: Windows)
    strategy:
      matrix:
        os: [ubuntu-22.04]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # NOVO: Cache para a instalação do Lazarus
      # Isso irá acelerar drasticamente as execuções subsequentes.
      - name: Cache Lazarus Installation
        id: cache-lazarus
        uses: actions/cache@v4
        with:
          path: ~/development
          key: ${{ runner.os }}-lazarus-3.6-fpc-3.2.2

      # Instalação das dependências (igual ao seu)
      - name: Install Environment Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends build-essential git subversion python3 python3-pip dos2unix wget unzip binutils-mingw-w64 libgtk2.0-dev

      - name: Create windres symlink
        run: sudo ln -s /usr/bin/x86_64-w64-mingw32-windres /usr/bin/windres

      - name: Install fpclazup
        run: |
          sudo wget https://github.com/LongDirtyAnimAlf/Reiniero-fpcup/releases/download/v2.4.0f/fpclazup-x86_64-linux -O /usr/local/bin/fpclazup
          sudo chmod +x /usr/local/bin/fpclazup

      # Instala o Lazarus apenas se o cache não for encontrado
      - name: Install Lazarus and FPC
        if: steps.cache-lazarus.outputs.cache-hit != 'true'
        run: fpclazup --noconfirm --lazversion=3.6 --fpcversion=3.2.2 --installdir=$HOME/development

      - name: Add Lazarus to PATH
        run: echo "$HOME/development/lazarus" >> $GITHUB_PATH

      # O cache das dependências do projeto já estava ótimo!
      - name: Cache Project Dependencies
        id: cache-project-deps
        uses: actions/cache@v4
        with:
          path: |
            ../acbr
            ../horse-master
            ../handle-exception
            ../jhonson
            ../fortesreport-ce4
            ../powerpdf
          key: ${{ runner.os }}-project-deps-${{ hashFiles('download.sh') }} # Ajuste o caminho para o seu download.sh

      - name: Run download.sh
        if: steps.cache-project-deps.outputs.cache-hit != 'true'
        run: |
          chmod +x ./download.sh # Ajuste o caminho
          ./download.sh # Ajuste o caminho

      - name: Install Python dependencies
        run: pip3 install tqdm

      - name: Run build.sh
        run: |
          dos2unix build.sh
          chmod +x build.sh # Ajuste o caminho
          ./build.sh

      # MELHORIA: Nome do artefato dinâmico
      - name: Package Artifact
        run: |
          mkdir -p release
          zip -j release/ACBRWebService-${{ github.ref_name }}-linux-x86_64.zip /home/runner/work/ACBRWebService/ACBRWebService/bin/ACBRWebService-x86_64-linux

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: release/*.zip
